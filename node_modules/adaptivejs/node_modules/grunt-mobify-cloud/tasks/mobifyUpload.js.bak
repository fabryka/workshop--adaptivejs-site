module.exports = function(grunt) {

    var Utils = require('../lib/utils');
    var fs = require('fs');

    grunt.registerMultiTask('mobifyUpload', 'Upload builds to the Mobify Cloud', function() {
        var done = this.async();

        var archivePath = 'build.tar';
        var options = this.options({
            projectSlug: '',
            settingsFile: '.mobify',
            origin: 'https://cloud.mobify.com'
        });

        // Grunt multi-tasks are used to iterate over an array of src-dest
        // file mappings.  Since we are only uploading one file we take the
        // first item from the files array
        var filepath = this.files[0].orig.src;
        var files = grunt.file.expand(filepath);

        function uploadArchive() {
            var settingsFile = options.settingsFile;
            var requestOptions = {
                projectSlug: options.projectSlug,
                origin: options.origin
            };

            requestOptions.auth = Utils.readCredentials(settingsFile);

            // Check build path, then create the build object
            if (!grunt.file.exists(archivePath)) {
                grunt.fail.warn('Specified path "' + archivePath + '" not found.');
                return false;
            }

            var buildObj = Utils.buildObject(archivePath, options.message);

            var buildJSON = JSON.stringify(buildObj, null, 4);
            var dataBuffer = new Buffer(buildJSON);

            requestOptions.dataLength = dataBuffer.length;
            console.log(requestOptions);
            var request = Utils.buildRequest(requestOptions, done);
            request.end(dataBuffer);
        }

        Utils.createArchive(files, options.projectSlug, archivePath, uploadArchive);
    });
};
