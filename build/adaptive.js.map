{
  "version": 3,
  "file": "adaptive.js",
  "sources": [
    "../node_modules/adaptivejs/bower_components/requirejs-plugins/lib/text.js",
    "text!preload-css",
    "text!preload-html",
    "text!preload-js",
    "../node_modules/adaptivejs/src/utils/buildOrigin.js",
    "../node_modules/adaptivejs/src/preloader.js",
    "../build/buildConfig.js",
    "../node_modules/adaptivejs/src/utils/assets.js",
    "../node_modules/adaptivejs/src/utils/isLocal.js",
    "../node_modules/adaptivejs/src/utils/isCapturing.js",
    "loader.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA,ACDA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA,ACHA;AACA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA,ADmCA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA,AD2CA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA,ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA,ADaA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "define('text',{load: function(id){throw new Error(\"Dynamic load not allowed: \" + id);}});\n",
    "\ndefine('text!preload-css',[],function () { return 'body{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0;margin:0}@-webkit-keyframes a{0%{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}to{-webkit-transform:translate3d(200%,0,0);transform:translate3d(200%,0,0)}}@keyframes a{0%{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}to{-webkit-transform:translate3d(200%,0,0);transform:translate3d(200%,0,0)}}.loader{width:100%;position:relative;overflow:hidden;top:0;height:6px;background:#eaeaea;-webkit-background-size:400% 400%;background-size:400% 400%}.loader:after{display:block;height:6px;content:\\'\\';background:-webkit-linear-gradient(0deg,#f48020,#e1761e);background:linear-gradient(90deg,#f48020,#e1761e);-webkit-animation:a 2s linear infinite;animation:a 2s linear infinite}.logo{position:absolute;top:50%;left:50%;width:25%;margin:-12.5% 0 0 -12.5%;opacity:.5}';});\n\n",
    "\ndefine('text!preload-html',[],function () { return '<div class=\"loader\"></div><div class=\"logo\"><svg class=\"js-preload-logo preloader-logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" enable-background=\"new 0 0 32 32\"><g id=\"Outlined\" fill=\"#889ba6\"><path d=\"M19.016 2.088v-.002s-5.05-2.48-6.002-2.032c-.825.385-4.118 6.257-4.9 7.674l10.902-5.64zM8.256 7.43C4.276 9.455.666 11.374.44 11.78c-.512.918 1.607 6.127 1.607 6.127s8.79-1.788 11.663-4.465c2.866-2.672 5.296-11.32 5.305-11.354L8.257 7.428z\"/><path d=\"M27.325 13.014l-.447 12.454c.003 0 4.672-3.133 4.76-4.18.08-.907-3.474-6.883-4.313-8.274zm.303.52c.237-4.482.383-8.6.144-9-.54-.9-6.11-1.67-6.11-1.67s-2.85 8.506-1.965 12.332c.883 3.826 7.182 10.272 7.182 10.272l.74-11.934z\"/><path d=\"M2.726 20.758c0 .006.378 5.614 1.24 6.214.746.52 7.53.43 9.154.397L2.726 20.75zm12.488-1.082C11.46 18.528 2.726 20.76 2.726 20.76l9.96 6.615h.002c3.76 2.446 7.256 4.632 7.72 4.625 1.052-.017 4.504-4.457 4.504-4.457s-5.944-6.72-9.698-7.867z\"/></g></svg></div>';});\n\n",
    "\ndefine('text!preload-js',[],function () { return '';});\n\n",
    "define('adaptivejs/utils/buildOrigin',[],function() {\n\n    /**\n     *  Grabs the location of the build so we can reference assets\n     *  with absolute urls\n     */\n    var cachedBuildScript;\n    var getBuildOrigin = function() {\n        var buildOrigin = '//localhost:8080/';\n\n        // Find an adaptive build script\n        if (!cachedBuildScript) {\n            var scripts = document.getElementsByTagName('script');\n            for (var i = 0; i < scripts.length; i++) {\n                if (/(mobify|adaptation|loader|adaptive)(\\.min)?\\.js/.test(scripts[i].getAttribute('src'))) {\n                    cachedBuildScript = scripts[i];\n                    break;\n                }\n            }\n        }\n\n        if (cachedBuildScript) {\n            try {\n                var adaptiveBuildSrc = cachedBuildScript.getAttribute('src');\n                buildOrigin = adaptiveBuildSrc.replace(/\\/[^\\/]*$/, '/');\n            } catch (e) {\n                console.error('Couldn\\'t determine adaptivejs build file used. The mobify-tag may be placed incorrectly.');\n            }\n        }\n        return buildOrigin;\n    };\n\n    return getBuildOrigin;\n});\n\n",
    "define('adaptivejs/preloader',[\n    // Built from files in app/preload\n    'text!preload-css',\n    'text!preload-html',\n    'text!preload-js',\n    'adaptivejs/utils/buildOrigin'\n], function(preloadCss, preloadHtml, preloadJs, buildOrigin) {\n    return function() {\n        var head = document.getElementsByTagName('head');\n        var body = document.getElementsByTagName('body');\n\n        // Some older browsers throw exceptions if document.head/document.body doesn't exist\n        if (!head.length || !body.length) {\n            return;\n        }\n\n        head = head[0];\n        body = body[0];\n\n        var style = document.createElement('style');\n        var container = document.createElement('div');\n        var scriptEl = document.createElement('script');\n        var meta = document.createElement('meta');\n\n        meta.name = 'viewport';\n        meta.content = 'width=device-width';\n\n        style.className = 'capture-remove';\n        container.className = 'preloader capture-remove';\n        scriptEl.className = 'capture-remove';\n\n        style.innerHTML = preloadCss;\n        container.innerHTML = preloadHtml;\n        scriptEl.innerHTML = preloadJs;\n\n        head.appendChild(meta);\n        head.appendChild(style);\n\n        body.appendChild(container);\n        head.appendChild(scriptEl);\n    };\n});\n\n",
    "define('buildConfig',[], function() {\n    return {\n        buildDate: 1446768412340,\n        cacheHashManifest: {\"css/stylesheet.css\":\"06599770\",\"css/stylesheet.css.map\":\"f7dbb1fd\",\"js/ui.js\":\"eadc88e9\",\"js/ui.js.map\":\"12084e0b\"},\n        captureLib: '//cdn.mobify.com/capturejs/capture-latest.min.js'\n    }\n});\n",
    "define('adaptivejs/utils/assets',[\n    'adaptivejs/utils/buildOrigin',\n    'buildConfig'\n],\nfunction(buildOrigin, buildConfig) {\n\n    var assetUtils = {};\n\n    /**\n     *  Returns the full url for the provided asset path\n     *  including a cache breaker.\n     *  basePath and cacheBreaker arguments are optional\n     */\n    assetUtils.getAssetUrl = function(path, baseUrl, cacheBreaker) {\n        var hash = buildConfig.cacheHashManifest[path];\n\n        // If path isn't found in the hashManifest, cache break with build date\n        if (cacheBreaker === undefined) {\n            cacheBreaker = hash ? hash : buildConfig.buildDate;\n        }\n\n        return (baseUrl || buildOrigin()) + path + '?' + cacheBreaker;\n    };\n\n    /**\n     *  Dynamically adds an element to the page based on the nodeName\n     *  and options supplied\n     *\n     *  ex: Utils.loadAsset('link', {\n     *          href: 'css/stylesheet.css',\n     *          rel: 'stylesheet',\n     *          type: 'text/css'\n     *      });\n     */\n    assetUtils.loadAsset = function(nodeName, options) {\n        var firstScript = document.getElementsByTagName('script')[0];\n\n        var script = document.createElement(nodeName);\n        for (var prop in options) {\n            if (options.hasOwnProperty(prop)) {\n                script[prop] = options[prop];\n            }\n        }\n        firstScript.parentNode.insertBefore(script, firstScript);\n    };\n\n    return assetUtils;\n});\n\n",
    "define('adaptivejs/utils/isLocal',['adaptivejs/utils/buildOrigin'], function(buildOrigin) {\n   /**\n    *  If the build origin of adaptive.js or adaptation.js contains the string\n    *  cdn.mobify, we know we are loaded from a bundle (preview or production)\n    *  Otherwise, we're being previewed locally\n    */\n    var isLocal = function() {\n        return buildOrigin().indexOf('cdn.mobify') === -1;\n    };\n    \n    return isLocal;\n});\n\n",
    "define('adaptivejs/utils/isCapturing',[],function() {\n    // Backwards compatibility fix needed for v6 tag\n    // See https://github.com/mobify/adaptivejs/pull/209\n    window.Mobify = window.Mobify || {};\n    window.Mobify.api = true;\n\n    /**\n     *  Checks whether or not we're currently in \"capturing\" state.\n     */\n    var isCapturing = function() {\n        if (document.getElementsByTagName('plaintext').length) {\n                return true;\n        }\n        return false;\n\n    };\n\n    return isCapturing;\n});\n\n",
    "/**\n * Scripts required here will be combined into adaptive.js\n */\n\nrequire([\n    'adaptivejs/preloader',\n    'adaptivejs/utils/assets',\n    'adaptivejs/utils/isLocal',\n    'adaptivejs/utils/isCapturing',\n    'buildConfig'\n],\nfunction(preloader, AssetUtils, isLocal, isCapturing, buildConfig) {\n\n    if (isCapturing()) {\n        var local = isLocal();\n        var adaptationScript = 'adaptation.' + (local ? '' : 'min.') + 'js';\n        var stylesheetName = 'css/stylesheet.' + (local ? '' : 'min.') + 'css';\n\n        // Load and display preload folder css/html/js (in that order)\n        preloader();\n\n        AssetUtils.loadAsset('script', {src: AssetUtils.getAssetUrl(adaptationScript), async: true, className: 'capture-remove'});\n        AssetUtils.loadAsset('script', {src: buildConfig.captureLib || '//cdn.mobify.com/capturejs/capture-latest.min.js', async: true, className: 'capture-remove'});\n\n        // Preload assets (on webkit only, as this breaks Firefox)\n        if (!/webkit/i.test(navigator.userAgent)) {\n            return;\n        }\n\n        AssetUtils.loadAsset('link', {href: AssetUtils.getAssetUrl(stylesheetName), rel: 'stylesheet', type: 'text/css', className: 'capture-remove'});\n    }\n\n}, null, true); // relPath, forceSync\n\n;\ndefine(\"loader\", function(){});\n\n"
  ]
}